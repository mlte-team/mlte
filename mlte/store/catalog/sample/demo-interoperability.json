{
    "header": {
        "identifier": "demo-interoperability",
        "creator": "admin",
        "created": 1727114774,
        "updater": null,
        "updated": -1,
        "catalog_id": "sample"
    },
    "tags": [
        "General"
    ],
    "quality_attribute": "Input and Output Specification",
    "code": "# ## 2f. Evidence - Interoperability QAS Measurements\n# \n# Measure proper input specification.\n\n# ### Initialize MLTE Context\n# \n# MLTE contains a global context that manages the currently active _session_. Initializing the context tells MLTE how to store all of the artifacts that it produces. This import will also set up global constants related to folders and model to use.\n\n# Sets up context for the model being used, sets up constants related to folders and model data to be used.\nfrom demo.scenarios.session import *\n\n\n# ### Helper Functions\n# \n# Prepare all functions and data for the measurements.\n\n# Load model module\nfrom demo.scenarios import model_predict\n\n\ndef run_and_get_log() -> str:\n    \\\"\\\"\\\"Runs the model and gets the log.\\\"\\\"\\\"\n    model_predict.run_model(SAMPLE_DATASET_DIR, MODEL_FILE_PATH)\n\n    return model_predict.load_log()\n\n\n# ### Measurements\n# \n# Finally, we execute the measurements and store the results.\n\nfrom mlte.measurement.external_measurement import ExternalMeasurement\nfrom mlte.evidence.types.string import String\n\n# Check input format is okay.\nmeasurement = ExternalMeasurement(\n    \\\"input format validation success\\\", String, run_and_get_log\n)\nresult = measurement.evaluate()\n# print(result)\nresult.save(force=True)\n\n# Check output format is okay.\nmeasurement = ExternalMeasurement(\n    \\\"output format validation success\\\", String, run_and_get_log\n)\nresult = measurement.evaluate()\n# print(result)\nresult.save(force=True)\n",
    "description": "The model reads inputs and provides outputs according to established input and output specifications during normal operation. During test execution all data in the test dataset produces an output that conforms to the output specification.",
    "inputs": "existing ML model, sample image data",
    "output": "log without validation issues"
}