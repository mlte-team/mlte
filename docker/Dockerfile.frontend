# Image definition environment, compilation and deployment of frontend.

###############################################################################
# Image with Node.js environment for frontend.
FROM node:22.16-bookworm-slim AS frontend-env

# Set up certificates for any proxies that can get in the middle of curl/wget commands during the build
# NOTE: put any CA certificates needed for a proxy in the ./certs folder in the root of this repo, in PEM format
# but with a .crt extensions, so they can be loaded into the container and used for SSL connections properly.
RUN apt-get update && apt-get install -y ca-certificates
RUN mkdir /certs
COPY ./certs/ /certs/
RUN if [ -n "$(ls -A /certs/*.crt)" ]; then \
      cp -rf /certs/*.crt /usr/local/share/ca-certificates/; \
      update-ca-certificates; \
    fi

# Install Javascript dependencies.
WORKDIR /mnt/app/mlte/frontend/nuxt-app
COPY mlte/frontend/nuxt-app/package.json /mnt/app/mlte/frontend/nuxt-app/package.json
COPY mlte/frontend/nuxt-app/package-lock.json /mnt/app/mlte/frontend/nuxt-app/package-lock.json
RUN npm ci && npm cache clean --force

# Build USWDS design dependencies.
COPY mlte/frontend/nuxt-app/assets /mnt/app/mlte/frontend/nuxt-app/assets
COPY mlte/frontend/nuxt-app/gulpfile.js /mnt/app/mlte/frontend/nuxt-app/
RUN npx gulp init

# Copy the actual frontend code.
COPY mlte/frontend/nuxt-app /mnt/app/mlte/frontend/nuxt-app


###############################################################################
# Image with built static frontend.
FROM frontend-env AS frontend-build

# Build the static website, including .env file with specific configs for frontend.
COPY docker/deployment/.env.frontend /mnt/app/mlte/frontend/nuxt-app/.env
WORKDIR /mnt/app/mlte/frontend/nuxt-app
RUN npm run build


###############################################################################
# Image with deployed/running frontend.
FROM mlte-python AS frontend-deployment

# Copy the static web site back into the MLTE folder structure.
COPY --from=frontend-build /mnt/app/mlte/frontend/nuxt-app/.output /mnt/app/mlte/frontend/nuxt-app/.output

# Install MLTE.
WORKDIR /mnt/app/
RUN poetry install

# Set the MLTE frontend server as the entry point.
ENTRYPOINT ["poetry", "run", "mlte", "ui"]
