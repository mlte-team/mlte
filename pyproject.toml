[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mlte-python"
version = "1.0.0"
description = "An infrastructure for machine learning test and evaluation."
authors = ["MLTE Engineers"]
packages = [
  { include = "mlte" }
]

include = [
  "mlte/frontend/nuxt-app/.output/public/**/*"
]
exclude = [
  "mlte/frontend/nuxt-app/**/**/*"
]

[tool.poetry.scripts]
mlte = "mlte.cli:run"

[tool.poetry.dependencies]
python = ">=3.9.1,<=3.11.0"
fastapi = ">=0.100.0"
pydantic-settings = "^2.0.3"
pydantic = "^2.1.1"
requests = "^2.31.0"
uvicorn = "^0.23.2"
httpx = "^0.24.1"
deepdiff = "^6.3.1"
dill = "^0.3.7"
psutil = "^5.9.5"
SQLAlchemy = "^2.0.25"
SQLAlchemy-Utils = "^0.41.1"
psycopg2-binary = "^2.9.9"
python-multipart = "^0.0.9"
cryptography = "^42.0.5"
python-jose = "^3.3.0"
bcrypt = "^4.1.2"
StrEnum = "^0.4.15"
pip-system-certs = "^4.0.0"

[tool.poetry.group.demo]
optional = true

[tool.poetry.group.demo-mac]
optional = true

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.qa]
optional = true

[tool.poetry.group.test]
optional = true

[tool.poetry.group.build]
optional = true

[tool.poetry.group.demo.dependencies]
numpy = "^1.26.4"
pandas = "^2.2.2"
pandas-stubs = "^2.2.2.240807"
scikit-learn = "^1.2.1"
matplotlib = "^3.6.3"
ipykernel = "^6.21.2"
notebook = "^6.5.3"
tensorflow = "2.14.0"

[tool.poetry.group.demo-mac.dependencies]
tensorflow-macos = "2.14.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocstrings-python = "*"
mkdocs-material = "*"
mkdocs-gen-files = "*"
mkdocs-literate-nav = "*"

[tool.poetry.group.qa.dependencies]
isort = "^5.12.0"
black = {extras = ["jupyter"], version = "^23.9.1"}
flake8 = "^6.1.0"
mypy = "^1.5.1"
types-requests = "^2.31.0.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
jsonschema = "^4.19.0"
nbmake = "^1.5.4"

[tool.poetry.group.build.dependencies]
bump2version = "^1.0.1"

[tool.isort]
profile="black"
line_length = 80
known_first_party=["mlte", "test"]

[tool.black]
line-length = 80
target-version = ['py38']

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = [
    "test",
]